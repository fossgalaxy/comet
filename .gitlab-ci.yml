image: python:3.7-alpine

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

before_script:
    - pip install pipenv
    - pipenv install --system

stages:
    - validate
    - test
    - deploy

check:
    stage: validate
    script:
        - pipenv ./manage.py check
    except:
        - tags

security:
    stage: validate
    script:
        - pipenv check
    except:
        - tags

migrate:
    stage: validate
    script:
        - pipenv ./manage.py migrate
    except:
        - tags

#django_test:
#    stage: test
#    script:
#        - pipenv ./manage.py test
#    except:
#        - tags

container:
  stage: publish
  image: tomkukral/buildah
  dependencies:
    - build
  before_script:
    - podman version
    - buildah version
    - podman login --username "${REGISTRY_USERNAME}" --password "${REGISTRY_PASSWORD}" "${REGISTRY_SERVER}"
  script:
    - buildah bud -t ${IMAGE_NAME}:${CI_COMMIT_SHA} .
    - buildah push ${IMAGE_NAME}:${CI_COMMIT_SHA} docker://${IMAGE_NAME}:${CI_COMMIT_SHA}
  after_script:
    - podman logout "${REGISTRY_SERVER}"

#dist_ci:
#    image: docker:latest
#    services:
#        - docker:dind
#    stage: deploy
#    before_script:
#        - echo deploying to gitlab docker registry
#    script:
#        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#        - docker build -t $IMAGE_TAG .
#        - docker push $IMAGE_TAG

#
#dist:
#    stage: deploy
#    tags:
#        - shell
#    before_script:
#        - echo deploying to docker hub
#    script:
#        - "docker build -t fossgalaxy/comet ."
#        - "docker push fossgalaxy/comet"

deploy_prod:
  stage: deploy
  script:
    - echo "Deploy to production server"
  environment:
    name: production
    url: https://comp.fopssgalaxy.com
  when: manual
  only:
  - master

